package entities;

import java.sql.Timestamp;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonManagedReference;

@Entity
@Table(name = "message_thread")
public class MessageThread {

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private int id;
	
	@Column(name = "created")
	private Timestamp created;
	
	@JsonManagedReference(value = "messageThreadParticipants")
	@ManyToMany(cascade = CascadeType.PERSIST, fetch = FetchType.EAGER)
	@JoinTable(name = "message_thread_participant", joinColumns = @JoinColumn(name = "message_thread_id"), inverseJoinColumns = @JoinColumn(name = "participant_id"))
	private List<User> messageThreadParticipants;
	
	@JsonManagedReference(value = "messageThreadReplies")
	@ManyToMany(cascade = CascadeType.PERSIST, fetch = FetchType.EAGER)
	@JoinTable(name = "message_thread_reply", joinColumns = @JoinColumn(name = "message_thread_id"), inverseJoinColumns = @JoinColumn(name = "reply_id"))
	private List<MessageThreadReply> messageThreadReplies;
	
}
