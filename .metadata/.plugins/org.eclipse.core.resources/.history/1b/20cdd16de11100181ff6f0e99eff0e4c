package entities;

import java.sql.Timestamp;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

@Entity
@Table(name = "service_request_tx")
public class ServiceRequestTx {
	
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private int id;
	
	@JoinColumn(name = "service_request_id")
	@ManyToOne(cascade = CascadeType.PERSIST, fetch = FetchType.EAGER)
	private ServiceRequest serviceRequestTxParent;
	
	@JoinColumn(name = "service_request_time_window_id")
	@ManyToOne(cascade = CascadeType.PERSIST, fetch = FetchType.EAGER)
	private ServiceRequestTimeWindow serviceRequestTxTimeWindow;

	@JoinColumn(name = "provider_id")
	@ManyToOne(cascade = CascadeType.PERSIST, fetch = FetchType.EAGER)
	private User serviceRequestProvider;
	
	@Column(name = "provider_accept_request")
	private Timestamp providerAcceptRequest;
	
	@Column(name = "recipient_accept_provider")
	private Timestamp recipientAcceptProvider;
	
	@Column(name = "recipient_cancel")
	private Timestamp recipientCancel;
	
	@Column(name = "provider_cancel")
	private Timestamp providerCancel;
	
	@Column(name = "recipient_service_complete")
	private Timestamp recipientServiceComplete;
	
	@Column(name = "recipient_hour_offer")
	private double recipientHourOffer;

	@Column(name = "provider_service_complete")
	private Timestamp providerServiceComplete;
	
	@Column(name = "provider_hour_request")
	private double providerHourRequest;

	@Column(name = "hours_exchanged")
	private double hoursExchanged;
	
	@Column(name = "moderator_closed")
	private Boolean moderatorClosed;
	
	@JoinColumn(name = "closing_moderator_id")
	@ManyToOne(cascade = CascadeType.PERSIST, fetch = FetchType.EAGER)
	private User closingModerator;
	
	@Column(name = "last_update")
	private Timestamp lastUpdate;
	
	@JoinColumn(name = "last_update_user_id")
	private User lastUpdateUser;
	
	
	
}
