package data;

import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;

import org.springframework.stereotype.Repository;
import org.springframework.transaction.annotation.Transactional;

import com.fasterxml.jackson.databind.ObjectMapper;

import entities.Address;

@Transactional
@Repository
public class AddressDAOImpl implements AddressDAO {

	@PersistenceContext
	EntityManager em;
	
	@Override
	public Address createAddress(String addressJson) {
		ObjectMapper mapper = new ObjectMapper();
		Address newAddress = null;
		
		try {
			newAddress = mapper.readValue(addressJson, Address.class);
			em.persist(newAddress);
			em.flush();
		}
		catch (Exception e) {
			e.printStackTrace();
		}
		
 		return newAddress;
	}

	@Override
	public Address getAddressById(int addressId) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public List<Address> getAddressesByZip(int zip) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public List<Address> getAddressesByState(String state) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public List<Address> getAddressesByCountry(String country) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Address updateAddress(int addressId, String addressJson) {
		// TODO Auto-generated method stub
		ObjectMapper mapper = new ObjectMapper();
		
		try {
			
		}
		catch (Exception e) {
			e.printStackTrace();
		}
		
		return null;
	}

	@Override
	public Boolean destroyAddress(int addressId) {
		// TODO Auto-generated method stub
		return null;
	}

}
