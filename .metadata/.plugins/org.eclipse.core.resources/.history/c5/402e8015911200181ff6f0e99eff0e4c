package entities;

import java.sql.Date;
import java.sql.Timestamp;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonIgnore;

@Entity
@Table(name = "item_loan_offer_tx")
public class ItemLoanOfferTx {

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private int id;
	
	@JsonIgnore
	@OneToOne(cascade = CascadeType.PERSIST, fetch = FetchType.EAGER)
	@JoinColumn(name = "item_loan_offer_id")
	private ItemLoanOffer itemLoanOfferTxParent;
	
	@ManyToOne(cascade = CascadeType.PERSIST, fetch = FetchType.EAGER)
	@JoinColumn(name = "borrower_id")
	private User borrower;
	
	@Column(name = "create_timestamp")
	private Timestamp createTimestamp;
	
	@Column(name = "loan_days_requested")
	private int loanDaysRequested;
	
	@Column(name = "loan_period_start_borrower_acknowledged_timestamp")
	private Timestamp startBorrowerAcknowledge;
	
	@Column(name = "loan_period_start_lender_acknowledged_timestamp")
	private Timestamp startLenderAcknowledge;
	
	@Column(name = "loan_begin_date")
	private Date loanBeginDate;
	
	@Column(name = "renew_count")
	private int renewCount;
	
	@Column(name = "due_date")
	private Date dueDate;
	
	@Column(name = "borrower_return_acknowledged_timestamp")
	private Timestamp returnBorrowerAcknowledge;
	
	@Column(name = "lender_return_acknowledged_timestamp")
	private Timestamp returnLenderAcknowledge;
	
	@Column(name = "complete_timestamp")
	private Timestamp completeTimestamp;

	@Column(name = "moderator_closed")
	private Boolean moderatorClosed;

	@JoinColumn(name = "closing_moderator_id")
	private User closingModerator;
	
	@Column(name = "last_update")
	private Timestamp lastUpdate;
	
	@JoinColumn(name = "last_update_user_id")
	private User lastUpdateUser;

	public int getId() {
		return id;
	}

	public void setId(int id) {
		this.id = id;
	}

	public ItemLoanOffer getItemLoanOfferTxParent() {
		return itemLoanOfferTxParent;
	}

	public void setItemLoanOfferTxParent(ItemLoanOffer itemLoanOfferTxParent) {
		this.itemLoanOfferTxParent = itemLoanOfferTxParent;
	}

	public User getBorrower() {
		return borrower;
	}

	public void setBorrower(User borrower) {
		this.borrower = borrower;
	}

	public Timestamp getCreateTimestamp() {
		return createTimestamp;
	}

	public void setCreateTimestamp(Timestamp createTimestamp) {
		this.createTimestamp = createTimestamp;
	}

	public int getLoanDaysRequested() {
		return loanDaysRequested;
	}

	public void setLoanDaysRequested(int loanDaysRequested) {
		this.loanDaysRequested = loanDaysRequested;
	}

	public Timestamp getStartBorrowerAcknowledge() {
		return startBorrowerAcknowledge;
	}

	public void setStartBorrowerAcknowledge(Timestamp startBorrowerAcknowledge) {
		this.startBorrowerAcknowledge = startBorrowerAcknowledge;
	}

	public Timestamp getStartLenderAcknowledge() {
		return startLenderAcknowledge;
	}

	public void setStartLenderAcknowledge(Timestamp startLenderAcknowledge) {
		this.startLenderAcknowledge = startLenderAcknowledge;
	}

	public Date getLoanBeginDate() {
		return loanBeginDate;
	}

	public void setLoanBeginDate(Date loanBeginDate) {
		this.loanBeginDate = loanBeginDate;
	}

	public int getRenewCount() {
		return renewCount;
	}

	public void setRenewCount(int renewCount) {
		this.renewCount = renewCount;
	}

	public Date getDueDate() {
		return dueDate;
	}

	public void setDueDate(Date dueDate) {
		this.dueDate = dueDate;
	}

	public Timestamp getReturnBorrowerAcknowledge() {
		return returnBorrowerAcknowledge;
	}

	public void setReturnBorrowerAcknowledge(Timestamp returnBorrowerAcknowledge) {
		this.returnBorrowerAcknowledge = returnBorrowerAcknowledge;
	}

	public Timestamp getReturnLenderAcknowledge() {
		return returnLenderAcknowledge;
	}

	public void setReturnLenderAcknowledge(Timestamp returnLenderAcknowledge) {
		this.returnLenderAcknowledge = returnLenderAcknowledge;
	}

	public Timestamp getCompleteTimestamp() {
		return completeTimestamp;
	}

	public void setCompleteTimestamp(Timestamp completeTimestamp) {
		this.completeTimestamp = completeTimestamp;
	}

	public Boolean getModeratorClosed() {
		return moderatorClosed;
	}

	public void setModeratorClosed(Boolean moderatorClosed) {
		this.moderatorClosed = moderatorClosed;
	}

	public User getClosingModerator() {
		return closingModerator;
	}

	public void setClosingModerator(User closingModerator) {
		this.closingModerator = closingModerator;
	}

	public Timestamp getLastUpdate() {
		return lastUpdate;
	}

	public void setLastUpdate(Timestamp lastUpdate) {
		this.lastUpdate = lastUpdate;
	}

	public User getLastUpdateUser() {
		return lastUpdateUser;
	}

	public void setLastUpdateUser(User lastUpdateUser) {
		this.lastUpdateUser = lastUpdateUser;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + id;
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		ItemLoanOfferTx other = (ItemLoanOfferTx) obj;
		if (id != other.id)
			return false;
		return true;
	}

	@Override
	public String toString() {
		StringBuilder builder = new StringBuilder();
		builder.append("ItemLoanOfferTx [id=").append(id).append(", itemLoanOfferTxParent=")
				.append(itemLoanOfferTxParent).append(", createTimestamp=").append(createTimestamp)
				.append(", completeTimestamp=").append(completeTimestamp).append("]");
		return builder.toString();
	}

}
